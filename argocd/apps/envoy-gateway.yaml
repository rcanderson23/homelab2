apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: envoy-gateway
  namespace: argocd
spec:
  sources:
  - repoURL: docker.io
    chart: envoyproxy/gateway-helm
    targetRevision: 1.2.4
    helm:
      valuesObject:
        podDisruptionBudget:
          minAvailable: 1
        
        deployment:
          envoyGateway:
            resources:
              limits:
                memory: 1024Mi
              requests:
                cpu: 100m
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              privileged: false
              runAsNonRoot: true
              runAsGroup: 65532
              runAsUser: 65532
              seccompProfile:
                type: RuntimeDefault
          ports:
            - name: grpc
              port: 18000
              targetPort: 18000
            - name: ratelimit
              port: 18001
              targetPort: 18001
            - name: wasm
              port: 18002
              targetPort: 18002
            - name: metrics
              port: 19001
              targetPort: 19001
          replicas: 2
          pod:
            annotations:
              prometheus.io/scrape: 'true'
              prometheus.io/port: '19001'
#      valueFiles:
#          - $values/argocd/values/external-secrets.yaml
#  - repoURL: 'https://github.com/rcanderson23/homelab2.git'
#    targetRevision: main
#    ref: values
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
  destination:
    server: https://kubernetes.default.svc
    namespace: envoy-gateway
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    argocd.argoproj.io/secret-type: repository
  name: docker-io-helm-oci
  namespace: argocd
stringData:
  url: docker.io
  name: docker
  type: helm
  enableOCI: "true"
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: private
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: private-gateway
  namespace: envoy-gateway
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  gatewayClassName: private
  infrastructure:
    parametersRef:
      group: gateway.envoyproxy.io
      kind: EnvoyProxy
      name: proxy-config
  listeners:
    - name: base
      hostname: carsonanderson.net
      port: 443
      protocol: HTTPS
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - name: carsonanderson-net-tls
    - name: wildcard
      hostname: '*.carsonanderson.net'
      port: 443
      protocol: HTTPS
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - name: carsonanderson-net-tls
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: http-to-https-filter-redirect
  namespace: envoy-gateway
spec:
  parentRefs:
    - name: private
  hostnames:
    - carsonanderson.net
    - '*.carsonanderson.net'
  rules:
    - filters:
      - type: RequestRedirect
        requestRedirect:
          scheme: https
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: proxy-config
  namespace: envoy-gateway
spec:
  provider:
    type: Kubernetes
    kubernetes:
      envoyDeployment:
        replicas: 3
      envoyService:
        patch:
          type: StrategicMerge
          value:
            spec:
              externalTrafficPolicy: Cluster
